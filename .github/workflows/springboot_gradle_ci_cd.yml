# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Spring Boot & Gradle CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    # 실행 환경 지정
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

        # 스프링부트 코드 Build
      - name: Build with Gradle
        run: ./gradlew clean build

        # 도커 로그인하고 도커 이미지 빌드 후 푸시한다.
      - name: web docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/beilsang-server .
          docker push ${{ secrets.DOCKER_USERNAME }}/beilsang-server

        # ssh로 EC2 접속해서 도커 컨테이너를 모두 멈춘 후, 도커 파일을 새로 받아 다시 docker-compose로 이미지를 실행시킨다.
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@main
        with:
          host: ${{ secrets.HOST_ID }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            sudo docker rm -f $(sudo docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/beilsang-server
            sudo docker-compose up -d
            sudo docker image prune -f