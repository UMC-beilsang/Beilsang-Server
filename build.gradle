plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.7'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'Beilsang'
version = '0.0.1-SNAPSHOT'

jar {
	enabled = false
}

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
configurations.all {
	exclude group: 'commons-logging', module: 'commons-logging'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.1'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'net.minidev:json-smart:2.4.9'
	implementation 'com.google.api.grpc:proto-google-common-protos:2.20.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.assertj:assertj-core:3.20.2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	//Firebase
	implementation 'com.google.firebase:firebase-admin:9.2.0'
	implementation 'com.google.code.gson:gson:2.8.8'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly    'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// 애플 인증 서버에 JSON Web Key(JWK)를 가져올 때 사용
	implementation platform("org.springframework.cloud:spring-cloud-dependencies:2022.0.5")
	implementation "org.springframework.cloud:spring-cloud-starter-openfeign"


}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
